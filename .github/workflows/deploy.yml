name: Build and Deploy

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

permissions:
  contents: write
  packages: write
  actions: write

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}

jobs:
  get_version:
    name: Determine Version
    runs-on: ubuntu-latest
    outputs:
      SemVer: ${{ steps.get-version.outputs.SemVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Version
        id: get-version
        run: |
          # Use timestamp and short SHA for unique versioning
          # Format: 0.1.YYYYMMDD-HHMM-SHA
          TIMESTAMP=$(date -u +"%Y%m%d-%H%M")
          SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-7)
          VERSION="0.1.${TIMESTAMP}-${SHORT_SHA}"
          echo "SemVer=${VERSION}" >> $GITHUB_OUTPUT
          echo "Generated version: ${VERSION}"

      - name: Output Version
        run: |
          echo "Version for this build: ${{ steps.get-version.outputs.SemVer }}"

  build-pwa:
    name: Build PWA Client
    needs: [get_version]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/peek-pwa-client
          tags: |
            type=raw,value=${{ needs.get_version.outputs.SemVer }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/pwa-client/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_RELAY_URL=wss://communities2.nos.social
            VITE_VALIDATION_SERVICE_PUBKEY=6e4ee3f07168d8728d79141cf94557055cc63e80e8e036b0cef518c095d1a09b
            VITE_DEV_MODE=false

  build-validation:
    name: Build Validation Service
    needs: [get_version]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/peek-validation-service
          tags: |
            type=raw,value=${{ needs.get_version.outputs.SemVer }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./packages/validation-service
          file: ./packages/validation-service/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  merge_to_release:
    name: Merge to Release and Update Versions
    needs: [build-pwa, build-validation, get_version]
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Check Out the Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Merge main Branch to Release
        shell: bash
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin
          git checkout release
          git merge -Xtheirs --no-commit origin/main || true
          # Reset workflow files to avoid permission issues
          git reset HEAD .github/workflows/
          git checkout -- .github/workflows/

      - name: Update PWA Client Version
        shell: bash
        run: |
          echo "Updating PWA Client to version: ${{ needs.get_version.outputs.SemVer }}"
          yq -i '.version = "${{ needs.get_version.outputs.SemVer }}"' ./deployment/pwa-client/Chart.yaml
          yq -i '.appVersion = "${{ needs.get_version.outputs.SemVer }}"' ./deployment/pwa-client/Chart.yaml
          yq -i '.image.tag = "${{ needs.get_version.outputs.SemVer }}"' ./deployment/pwa-client/values.yaml

      - name: Update Validation Service Version
        shell: bash
        run: |
          echo "Updating Validation Service to version: ${{ needs.get_version.outputs.SemVer }}"
          yq -i '.version = "${{ needs.get_version.outputs.SemVer }}"' ./deployment/validation-service/Chart.yaml
          yq -i '.appVersion = "${{ needs.get_version.outputs.SemVer }}"' ./deployment/validation-service/Chart.yaml
          yq -i '.image.tag = "${{ needs.get_version.outputs.SemVer }}"' ./deployment/validation-service/values.yaml

      - name: Commit and Push Changes
        shell: bash
        run: |
          git add deployment/*/Chart.yaml deployment/*/values.yaml
          git commit -m "Deploy version ${{ needs.get_version.outputs.SemVer }}" || echo "No changes to commit"
          git push origin release

      - name: Output Deployment Summary
        run: |
          echo "# Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "## Version Deployed: ${{ needs.get_version.outputs.SemVer }}" >> $GITHUB_STEP_SUMMARY
          echo "### Images Built and Pushed:" >> $GITHUB_STEP_SUMMARY
          echo "- ghcr.io/${{ env.IMAGE_PREFIX }}/peek-pwa-client:${{ needs.get_version.outputs.SemVer }}" >> $GITHUB_STEP_SUMMARY
          echo "- ghcr.io/${{ env.IMAGE_PREFIX }}/peek-validation-service:${{ needs.get_version.outputs.SemVer }}" >> $GITHUB_STEP_SUMMARY
          echo "### Updated Files in Release Branch:" >> $GITHUB_STEP_SUMMARY
          echo "- deployment/pwa-client/values.yaml" >> $GITHUB_STEP_SUMMARY
          echo "- deployment/validation-service/values.yaml" >> $GITHUB_STEP_SUMMARY